{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendCard/FriendCard.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendCard/index.jsx","components/FriendList/index.jsx","components/TransactionHistory/TransactionHistory.jsx","components/App/index.jsx","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","classNames","styles","profile","description","src","alt","followers","views","likes","Statistics","title","statistics","list","map","item","key","id","style","backgroundColor","Math","floor","random","label","percentage","FriendCard","isOnline","status","online","width","FriendList","friends","friendList","friend","TransactionHistory","items","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51c9e7d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__27FUY\",\"description\":\"Profile_description__3CXr_\",\"avatar\":\"Profile_avatar__3mHCI\",\"stats\":\"Profile_stats__1v46o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__FTnuz\",\"title\":\"Statistics_title__3_oIQ\",\"list\":\"Statistics_list__2_nMB\",\"item\":\"Statistics_item__Hkf3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendCard_item__1tECs\",\"status\":\"FriendCard_status__3SR4g\",\"avatar\":\"FriendCard_avatar__2AVpW\",\"online\":\"FriendCard_online__PGBfF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__1sYXs\"};","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => (\r\n  <div className={classNames(styles.profile)}>\r\n    <div className={classNames(styles.description)}>\r\n      <img\r\n        src={avatar}\r\n        alt=\"user avatar\"\r\n        className={classNames(styles.avatar)}\r\n      />\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">{\"@\" + tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n\r\n    <ul className={classNames(styles.stats)}>\r\n      <li>\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{stats.followers}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{stats.views}</span>\r\n      </li>\r\n      <li>\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={classNames(styles.statistics)}>\r\n    {title && <h2 className={classNames(styles.title)}>{title}</h2>}\r\n    <ul className={classNames(styles.list)}>\r\n      {stats.map((item) => (\r\n        <li\r\n          key={item.id}\r\n          className={classNames(styles.item)}\r\n          style={{\r\n            backgroundColor: `#${Math.floor(Math.random() * 1000)}`,\r\n          }}\r\n        >\r\n          <span className=\"label\">{item.label}</span>\r\n          <span className=\"percentage\">{item.percentage + \"%\"}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FriendCard.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst FriendCard = ({ isOnline, avatar, name }) => (\r\n  <li className={classNames(styles.item)}>\r\n    <span\r\n      className={classNames(styles.status, isOnline ? styles.online : \"\")}\r\n    ></span>\r\n    <img className={classNames(styles.avatar)} src={avatar} alt=\"\" width=\"48\" />\r\n    <p className=\"name\">{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendCard.propTypes = {\r\n  isOnline: PropTypes.bool.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport styles from \"./FriendList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport FriendCard from \"./FriendCard\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul className={classNames(styles.friendList)}>\r\n    {friends.map((friend) => {\r\n      return (\r\n        <FriendCard\r\n          key={friend.id}\r\n          isOnline={friend.isOnline}\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n};\r\n","import React from \"react\";\r\nimport \"./TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map((item) => (\r\n        <tr key={item.id}>\r\n          <td>{item.type}</td>\r\n          <td>{item.amount}</td>\r\n          <td>{item.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\n\r\nimport Profile from \"../Profile/Profile\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport FriendList from \"../FriendList\";\r\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\r\n\r\nimport user from \"../../db/user.json\";\r\nimport statisticalData from \"../../db/statistical-data.json\";\r\nimport friends from \"../../db/friends.json\";\r\nimport transactions from \"../../db/transactions.json\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n    />\r\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n    <FriendList friends={friends} />\r\n    <TransactionHistory items={transactions} />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}