{"version":3,"sources":["App/task-3/FriendList.module.css","App/task-1/Profile.module.css","App/task-2/Statistics.module.css","App/task-1/Profile.jsx","App/task-2/Statistics.jsx","App/task-3/FriendList.jsx","App/task-4/TransactionHistory.jsx","App/index.jsx","index.js"],"names":["module","exports","Stats","followers","views","likes","className","classNames","styles","stats","Profile","avatar","name","tag","location","profile","description","src","alt","Statistics","title","statistics","list","map","item","id","label","percentage","key","FriendCard","isOnline","console","log","status","online","width","FriendList","friends","friendList","friend","TransactionHistory","items","type","amount","currency","transaction","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4469aa8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3_bee\",\"item\":\"FriendList_item__sHmjy\",\"status\":\"FriendList_status__2k-gH\",\"avatar\":\"FriendList_avatar__2kb_f\",\"online\":\"FriendList_online__FxX2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3tWnD\",\"description\":\"Profile_description__1Z7e2\",\"avatar\":\"Profile_avatar__XbHnJ\",\"stats\":\"Profile_stats__3g4GZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3TW5G\",\"title\":\"Statistics_title__1QTYA\",\"list\":\"Statistics_list__38LX4\",\"item\":\"Statistics_item__1uhBf\"};","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Stats = ({ followers, views, likes }) => (\r\n  <ul className={classNames(styles.stats)}>\r\n    <li>\r\n      <span className=\"label\">Followers</span>\r\n      <span className=\"quantity\">{followers}</span>\r\n    </li>\r\n    <li>\r\n      <span className=\"label\">Views</span>\r\n      <span className=\"quantity\">{views}</span>\r\n    </li>\r\n    <li>\r\n      <span className=\"label\">Likes</span>\r\n      <span className=\"quantity\">{likes}</span>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst Profile = ({ avatar, name, tag, location, stats }) => (\r\n  <div className={classNames(styles.profile)}>\r\n    <div className={classNames(styles.description)}>\r\n      <img\r\n        src={avatar}\r\n        alt=\"user avatar\"\r\n        className={classNames(styles.avatar)}\r\n      />\r\n      <p className=\"name\">{name}</p>\r\n      <p className=\"tag\">{\"@\" + tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n    <Stats\r\n      followers={stats.followers}\r\n      views={stats.views}\r\n      likes={stats.likes}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Profile;\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string,\r\n  tag: PropTypes.string,\r\n  location: PropTypes.string,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n  }),\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Stats = ({ id, label, percentage }) => (\r\n  <li key={id} className={classNames(styles.item)}>\r\n    <span className=\"label\">{label}</span>\r\n    <span className=\"percentage\">{percentage + \"%\"}</span>\r\n  </li>\r\n);\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={classNames(styles.statistics)}>\r\n    {title && <h2 className={classNames(styles.title)}>{title}</h2>}\r\n    <ul className={classNames(styles.list)}>\r\n      {stats.map((item) => Stats(item))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FriendList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n\r\nconst FriendCard = ({ isOnline, id, avatar, name }) => {\r\n  console.log(isOnline);\r\n  return (\r\n    <li className={classNames(styles.item)}>\r\n      <span\r\n        className={classNames(styles.status, isOnline ? styles.online : \"\")}\r\n      ></span>\r\n      <img\r\n        className={classNames(styles.avatar)}\r\n        src={avatar}\r\n        alt=\"\"\r\n        width=\"48\"\r\n      />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <ul key=\"1234\" className={classNames(styles.friendList)}>\r\n    {friends.map((friend) => (\r\n      <FriendCard\r\n        key={friend.id}\r\n        isOnline={friend.isOnline}\r\n        avatar={friend.avatar}\r\n        name={friend.name}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default FriendList;\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      isOnline: PropTypes.bool,\r\n      id: PropTypes.number,\r\n      avatar: PropTypes.string,\r\n      name: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\nimport \"./TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst transaction = ({ id, type, amount, currency }) => (\r\n  <tr key={id}>\r\n    <td>{type}</td>\r\n    <td>{amount}</td>\r\n    <td>{currency}</td>\r\n  </tr>\r\n);\r\n\r\nconst TransactionHistory = ({ items }) => (\r\n  <table className=\"transaction-history\">\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>{items.map((item) => transaction(item))}</tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      type: PropTypes.string,\r\n      amount: PropTypes.string,\r\n      currency: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n","import React from \"react\";\r\n\r\nimport Profile from \"./task-1/Profile\";\r\nimport Statistics from \"./task-2/Statistics\";\r\nimport FriendList from \"./task-3/FriendList\";\r\nimport TransactionHistory from \"./task-4/TransactionHistory\";\r\n\r\nimport user from \"./task-1/user.json\";\r\nimport statisticalData from \"./task-2/statistical-data.json\";\r\nimport friends from \"./task-3/friends.json\";\r\nimport transactions from \"./task-4/transactions.json\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Profile\r\n      key={\"task-1\"}\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n    />\r\n    <Statistics key={\"task-2\"} title=\"Upload stats\" stats={statisticalData} />\r\n    <FriendList key={\"task-3\"} friends={friends} />\r\n    <TransactionHistory key={\"task-4\"} items={transactions} />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}